create table Movie (m_name varchar (25) primary key, release_year integer, budget money);

insert into movie values('KGF',2022,'1250000');
insert into movie values('Pushpa',2020,'150000');

create table Actor(a_name varchar(30) primary key, role varchar(30), charges money, a_address varchar(30) );

insert into Actor values('om','hero',50000,'pune');
insert into Actor values('sai','villan',100000,'pune');

create table ma (m_name varchar(25) references movie,a_name varchar(30) references actor);

insert into ma values('KGF','sai');
insert into ma values('Pushpa','om');
insert into ma values('KGF','om');
insert into ma values('Pushpa','sai');

i.Write a function which will accept the movie name as input and prints its release year and budget.
=
 create or replace function dis_M(name movie.m_name%type) returns void as 
$$
 declare
 r movie%rowtype;
 c1 cursor for select * from movie where m_name=name ;
 begin
 open c1;
   loop
    fetch c1 into r;
    exit when not found;
    raise notice'Release Year=%',r.release_year;
    raise notice'Movie budget=%',r.budget;
   end loop;
  close c1;
  end; $$
 language plpgsql;

select dis_M('KGF');

ii.Write a function using cursor, which will accept the actor name and print the names of all movies in which that actor has acted.

create or replace function mv(name actor.a_name%type)returns void
as
$$
declare
 r1 movie.m_name%type;
 c1 cursor for select movie.m_name from movie,actor,ma  where movie.m_name=ma.m_name
 and actor.a_name=ma.a_name and actor.a_name=name;
begin
  open c1;
   loop
    fetch c1 into r1;
    exit when not found;
     raise notice'MOVIES NAME=%',r1;
   end loop;
 close c1;
 end;
  $$
 language plpgsql;

select Mv('sai');
select Mv('sai');

iii. Write a trigger which will be executed whenever an actor is deleted from the actor table, display appropriate message .

create or replace function ft()returns trigger as $$
 begin
  raise notice'Record is deleted';
  return old;
 end; $$ language plpgsql;
 
 create trigger t3 after delete on actor for each row execute procedure ft(); 
 
